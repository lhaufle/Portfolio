Option Explicit

Sub automate()
    '#################################################################
    ' Set up The left columns then determine credits
    '#################################################################
    Dim credRangeOne As Range 'for column header
    Dim credRangeTwo As Range 'for column header
    Dim counter As Integer 'to count the rows
    Dim i As Integer 'to loop through the rows of the left column
    
    'get range for credit headers
    Set credRangeOne = Range("AE1")
    Set credRangeTwo = Range("AF1")
    
    'Add header for credits 120
    With credRangeOne
        .Font.Bold = True
        .Value = "Credits 120"
        .Interior.Color = RGB(192, 192, 192)
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
    End With
    
    'add header for credits 180
    With credRangeTwo
        .Font.Bold = True
        .Value = "Credits 180"
        .Interior.Color = RGB(192, 192, 192)
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
    End With
    
    'freeze top row
    ActiveWindow.FreezePanes = True
    
    'count how many rows are in the spreadsheet
     counter = Range("A1").End(xlDown).Row
    
    'loop through credits 120 rows to determine values
     For i = 2 To counter
        If Range("AB" & i).Value < 0 Then
            Range("AE" & i).Value = Range("AB" & i).Value
            Range("AE" & i).NumberFormat = "$#,##0.00"
        Else
            Range("AE" & i).Value = 0
            Range("AE" & i).NumberFormat = "$#,##0.00"
        End If
     Next i
     
    'loop through credits 180 rows to determine values
    For i = 2 To counter
        If Range("AC" & i).Value < 0 Then
             Range("AF" & i).Value = Range("AC" & i).Value
             Range("AF" & i).NumberFormat = "$#,##0.00"
        Else
             Range("AF" & i).Value = 0
             Range("AF" & i).NumberFormat = "$#,##0.00"
        End If
    Next i
    
    '#################################################################
    ' Add totals to bottom of columns
    '#################################################################
    'variables that will hold the sum of a column
    Dim totalAR As Double
    Dim current As Double
    Dim p1 As Double
    Dim p2 As Double
    Dim p3 As Double
    Dim p4 As Double
    Dim total As Double
    Dim ytdTotal As Double
    Dim mtdTotal As Double
    Dim mtdCost As Double
    Dim ytdCost As Double
    
    'variables that will hold the sum of an aging column
    Dim zeroThirty As Double
    Dim thirtyOneSixty As Double
    Dim sixtyOneNinety As Double
    Dim ninetyOneOneTwenty As Double
    Dim oneTwentyOneOneEighty As Double
    Dim oneEightyOnePlus As Double
    
    'variable for other column
    Dim other As Double
    
    'variables for credit columns
    Dim oneCredit As Double 'for 120 days
    Dim twoCredit As Double 'for 180 days
    
      'fill blank cell, which will make counting cell easier
      
      Call fillBoxes("X", counter)
      Call fillBoxes("Y", counter)
      Call fillBoxes("Z", counter)
      Call fillBoxes("AA", counter)
      Call fillBoxes("AB", counter)
      Call fillBoxes("AC", counter)
      Call fillBoxes("AD", counter)
      Call fillBoxes("AE", counter)
      Call fillBoxes("AF", counter)
       
    
    
   'assign values to totals with the getTotals function
   totalAR = getTotals("L", counter)
   current = getTotals("M", counter)
   p1 = getTotals("N", counter)
   p2 = getTotals("O", counter)
   p3 = getTotals("P", counter)
   p4 = getTotals("Q", counter)
   total = getTotals("R", counter)
   ytdTotal = getTotals("T", counter)
   mtdTotal = getTotals("U", counter)
   mtdCost = getTotals("V", counter)
   ytdCost = getTotals("W", counter)
   zeroThirty = getTotals("X", counter)
   thirtyOneSixty = getTotals("Y", counter)
   sixtyOneNinety = getTotals("Z", counter)
   ninetyOneOneTwenty = getTotals("AA", counter)
   oneTwentyOneOneEighty = getTotals("AB", counter)
   oneEightyOnePlus = getTotals("AC", counter)
   other = getTotals("AD", counter)
   oneCredit = getTotals("AE", counter)
   twoCredit = getTotals("AF", counter)
   
 
   
   'places the total of colunm value in the one that is 1 below relative reference
    Range("L1").End(xlDown).Offset(1, 0).Value = Format(totalAR, "Currency")
    Range("M1").End(xlDown).Offset(1, 0).Value = Format(current, "Currency")
    Range("N1").End(xlDown).Offset(1, 0).Value = Format(p1, "Currency")
    Range("O1").End(xlDown).Offset(1, 0).Value = Format(p2, "Currency")
    Range("P1").End(xlDown).Offset(1, 0).Value = Format(p3, "Currency")
    Range("Q1").End(xlDown).Offset(1, 0).Value = Format(p4, "Currency")
    Range("R1").End(xlDown).Offset(1, 0).Value = Format(total, "Currency")
    Range("T1").End(xlDown).Offset(1, 0).Value = Format(ytdTotal, "Currency")
    Range("U1").End(xlDown).Offset(1, 0).Value = Format(mtdTotal, "Currency")
    Range("V1").End(xlDown).Offset(1, 0).Value = Format(mtdCost, "Currency")
    Range("W1").End(xlDown).Offset(1, 0).Value = Format(ytdCost, "Currency")
    Range("X1").End(xlDown).Offset(1, 0).Value = Format(zeroThirty, "Currency")                                   'X column
    Range("Y1").End(xlDown).Offset(1, 0).Value = Format(thirtyOneSixty, "Currency")                               'Y column
    Range("Z1").End(xlDown).Offset(1, 0).Value = Format(sixtyOneNinety, "Currency")                               'Z column
    Range("AA1").End(xlDown).Offset(1, 0).Value = Format(ninetyOneOneTwenty, "Currency")                          'AA column
    Range("AB1").End(xlDown).Offset(1, 0).Value = Format(oneTwentyOneOneEighty, "Currency")                       'AB column
    Range("AC1").End(xlDown).Offset(1, 0).Value = Format(oneEightyOnePlus, "Currency")                            'AC column
    Range("AD1").End(xlDown).Offset(1, 0).Value = Format(other, "Currency")                                       'AD column
    Range("AE1").End(xlDown).Offset(1, 0).Value = Format(oneCredit, "Currency")                                   'AE column
    Range("AF1").End(xlDown).Offset(1, 0).Value = Format(twoCredit, "Currency")                                   'AF column
    
    '#################################################################
    ' create AR table
    '#################################################################
    
    'create Row One--------------------------------------------------
    Range("X1").End(xlDown).Offset(3, 0).Value = 0
    Range("Y1").End(xlDown).Offset(3, 0).Value = 31
    Range("Z1").End(xlDown).Offset(3, 0).Value = 61
    Range("AA1").End(xlDown).Offset(3, 0).Value = 91
    Range("AB1").End(xlDown).Offset(3, 0).Value = 121
    Range("AC1").End(xlDown).Offset(3, 0).Value = "Total"
    Range("AD1").End(xlDown).Offset(3, 0).Value = "Differ"
    
    'create Row Two--------------------------------------------------
    
    'create variables that will allow hold rounded valuables.
    Dim checkTotal As Double
    
    Range("V1").End(xlDown).Offset(4, 0).Value = "AR"
    Range("W1").End(xlDown).Offset(4, 0).Value = Format(Round(totalAR, 0), "Currency")
    Range("X1").End(xlDown).Offset(4, 0).Value = Format(Round(zeroThirty, 0), "Currency")
    Range("Y1").End(xlDown).Offset(4, 0).Value = Format(Round(thirtyOneSixty, 0), "Currency")
    Range("Z1").End(xlDown).Offset(4, 0).Value = Format(Round(sixtyOneNinety, 0), "Currency")
    Range("AA1").End(xlDown).Offset(4, 0).Value = Format(Round(ninetyOneOneTwenty, 0), "Currency")
    Range("AB1").End(xlDown).Offset(4, 0).Value = Format(Round(oneTwentyOneOneEighty + oneEightyOnePlus, 0), "Currency")
    
    checkTotal = Range("X1").End(xlDown).Offset(4, 0).Value + Range("Y1").End(xlDown).Offset(4, 0).Value + Range("Z1").End(xlDown).Offset(4, 0).Value + Range("AA1").End(xlDown).Offset(4, 0).Value + Range("AB1").End(xlDown).Offset(4, 0).Value
    
    Range("AC1").End(xlDown).Offset(4, 0).Value = Format(Round(checkTotal, 0), "Currency")
    Range("AD1").End(xlDown).Offset(4, 0).Value = Format(Round(totalAR - checkTotal, 0), "Currency")
    
    'add third row to A/R table
    Range("X1").End(xlDown).Offset(5, 0).Value = "Reserve%"
    Range("Y1").End(xlDown).Offset(5, 0).Value = "1%"
    Range("Z1").End(xlDown).Offset(5, 0).Value = "10%"
    Range("AA1").End(xlDown).Offset(5, 0).Value = "25%"
    Range("AB1").End(xlDown).Offset(5, 0).Value = "100%"
    
    'add fourth row to a/r tables
    Dim percThirty As Double
    Dim percSixty As Double
    Dim percNinty As Double
    Dim percOneTwenty As Double
    
    
    percThirty = Range("Y1").End(xlDown).Offset(4, 0).Value * 0.01
    percSixty = Range("Z1").End(xlDown).Offset(4, 0).Value * 0.1
    percNinty = Range("AA1").End(xlDown).Offset(4, 0).Value * 0.25
    percOneTwenty = Range("AB1").End(xlDown).Offset(4, 0).Value * 1
    
    Range("V1").End(xlDown).Offset(6, 0).Value = "Net AR"
    Range("X1").End(xlDown).Offset(6, 0).Value = "Reserve Amount"
    Range("Y1").End(xlDown).Offset(6, 0).Value = Format(Round(percThirty, 0), "Currency")
    Range("Z1").End(xlDown).Offset(6, 0).Value = Format(Round(percSixty, 0), "Currency")
    Range("AA1").End(xlDown).Offset(6, 0).Value = Format(Round(percNinty, 0), "Currency")
    Range("AB1").End(xlDown).Offset(6, 0).Value = Format(Round(percOneTwenty, 0), "Currency")
    
    'get some of totals and store it in the percTotal variable
    
    Range("AC1").End(xlDown).Offset(6, 0).Value = Range("Y1").End(xlDown).Offset(6, 0).Value + Range("Z1").End(xlDown).Offset(6, 0).Value + Range("AA1").End(xlDown).Offset(6, 0).Value + Range("AB1").End(xlDown).Offset(6, 0).Value
    Range("AD1").End(xlDown).Offset(6, 0).Value = Range("Y1").End(xlDown).Offset(6, 0).Value + Range("Z1").End(xlDown).Offset(6, 0).Value + Range("AA1").End(xlDown).Offset(6, 0).Value + Range("AB1").End(xlDown).Offset(6, 0).Value
    Range("W1").End(xlDown).Offset(6, 0).Value = Format(Round(totalAR - Range("AC1").End(xlDown).Offset(6, 0).Value, 0), "Currency") ' shows the net AR
    
    'Add Current Reserve, cretis and change text under AC column
    Range("AC1").End(xlDown).Offset(7, 0).Value = "Current Reserve"
    Range("AC1").End(xlDown).Offset(8, 0).Value = "Credits"
    Range("AC1").End(xlDown).Offset(9, 0).Value = "Change"
    
    'get name of the last month reserve and value
    
    'variable to hold formated input
    Dim lastMonthReserve As Double
    Dim monthName As String
    
    'prompt user for Month's Name
    monthName = InputBox("Please enter the name of last months reserve, such as 'April'")
    Range("AE1").End(xlDown).Offset(7, 0).Value = monthName
    
    'prompt user for reserve value
    lastMonthReserve = InputBox("Please enter the amount for " & monthName & "'s reserve (Do Not Include Dollar Signs, Periods, or Commas)")
    Range("AD1").End(xlDown).Offset(7, 0).Value = Format(Round((lastMonthReserve), 0), "Currency")
    
    'get total credits
    Range("AD1").End(xlDown).Offset(8, 0).Value = Format(Round((oneCredit + twoCredit), 0), "Currency")
    
    'show the change amount
    Range("AD1").End(xlDown).Offset(9, 0).Value = Format(Round((Range("AD1").End(xlDown).Offset(6, 0).Value - Range("AD1").End(xlDown).Offset(7, 0).Value - Range("AD1").End(xlDown).Offset(8, 0).Value), 0), "Currency")
    
    '#################################################################
    ' create Symphony and NuCare tables
    '#################################################################
    'variables to hold amounts for symphony
    Dim symZero As Double
    Dim symThirty As Double
    Dim symSixty As Double
    Dim symNinety As Double
    Dim symOneTwenty As Double
    Dim symOneEighty As Double
    Dim j As Integer 'used for looping
    
    'variables to hold amount for nucare
    Dim nuZero As Double
    Dim nuThirty As Double
    Dim nuSixty As Double
    Dim nuNinety As Double
    Dim nuOneTwenty As Double
    Dim nuOneEighty As Double
    
    'loop through bill to name column to set symphony variables
    For j = 2 To counter
        If Range("D" & j).Value = "Care1" Then
            symZero = Range("X" & j).Value
            symThirty = Range("Y" & j).Value
            symSixty = Range("Z" & j).Value
            symNinety = Range("AA" & j).Value
            symOneTwenty = Range("AB" & j).Value
            symOneEighty = Range("AC" & j).Value
        End If
    Next j
    
    'loop through bill to name colomn to set nuCare variables
    For j = 2 To counter
        If Range("D" & j).Value = "Care2" Then
            nuZero = Range("X" & j).Value
            nuThirty = Range("Y" & j).Value
            nuSixty = Range("Z" & j).Value
            nuNinety = Range("AA" & j).Value
            nuOneTwenty = Range("AB" & j).Value
            nuOneEighty = Range("AC" & j).Value
        End If
    Next j
    
    'display values for the first symphony row.
    Range("X1").End(xlDown).Offset(11, 0).Value = "Symphony"
    Range("Y1").End(xlDown).Offset(11, 0).Value = Format(symThirty, "Currency")
    Range("Z1").End(xlDown).Offset(11, 0).Value = Format(symSixty, "Currency")
    Range("AA1").End(xlDown).Offset(11, 0).Value = Format(symNinety, "Currency")
    Range("AB1").End(xlDown).Offset(11, 0).Value = Format(symOneTwenty, "Currency")
    Range("AC1").End(xlDown).Offset(11, 0).Value = Format(symOneEighty, "Currency")
    
    'display values for NuCare
    Range("X1").End(xlDown).Offset(12, 0).Value = "NuCare"
    Range("Y1").End(xlDown).Offset(12, 0).Value = Format(nuThirty, "Currency")
    Range("Z1").End(xlDown).Offset(12, 0).Value = Format(nuSixty, "Currency")
    Range("AA1").End(xlDown).Offset(12, 0).Value = Format(nuNinety, "Currency")
    Range("AB1").End(xlDown).Offset(12, 0).Value = Format(nuOneTwenty, "Currency")
    Range("AC1").End(xlDown).Offset(12, 0).Value = Format(nuOneEighty, "Currency")
    
    'display sum of Nucare and Symphony below NuCare Aging
    Range("Y1").End(xlDown).Offset(13, 0).Value = Format((nuThirty + symThirty), "Currency")
    Range("Z1").End(xlDown).Offset(13, 0).Value = Format((nuSixty + symSixty), "Currency")
    Range("AA1").End(xlDown).Offset(13, 0).Value = Format((nuNinety + symNinety), "Currency")
    Range("AB1").End(xlDown).Offset(13, 0).Value = Format((nuOneTwenty + symOneTwenty), "Currency")
    Range("AC1").End(xlDown).Offset(13, 0).Value = Format((nuOneEighty + symOneEighty), "Currency")
    
    'display percentage columns
    Range("Y1").End(xlDown).Offset(14, 0).Value = 0.01
    Range("Z1").End(xlDown).Offset(14, 0).Value = 0.1
    Range("AA1").End(xlDown).Offset(14, 0).Value = 0.25
    Range("AB1").End(xlDown).Offset(14, 0).Value = 1
    Range("AC1").End(xlDown).Offset(14, 0).Value = 1
    
    'total the columns with percentages.
    Range("X1").End(xlDown).Offset(15, 0).Value = "Totals"
    Range("Y1").End(xlDown).Offset(15, 0).Value = (nuThirty + symThirty) * 0.01
    Range("Z1").End(xlDown).Offset(15, 0).Value = (nuSixty + symSixty) * 0.1
    Range("AA1").End(xlDown).Offset(15, 0).Value = (nuNinety + symNinety) * 0.25
    Range("AB1").End(xlDown).Offset(15, 0).Value = (nuOneTwenty + symOneTwenty) * 1
    Range("AC1").End(xlDown).Offset(15, 0).Value = (nuOneEighty + symOneEighty) * 1
    Range("AD1").End(xlDown).Offset(15, 0).Value = Format(Range("Y1").End(xlDown).Offset(15, 0).Value + Range("Z1").End(xlDown).Offset(15, 0).Value + Range("AA1").End(xlDown).Offset(15, 0).Value + Range("AB1").End(xlDown).Offset(15, 0).Value + Range("AC1").End(xlDown).Offset(15, 0).Value, "Currency")
    
    'display values for the first symphony row.
    Range("X1").End(xlDown).Offset(17, 0).Value = "Symphony"
    Range("Y1").End(xlDown).Offset(17, 0).Value = Format(symThirty, "Currency")
    Range("Z1").End(xlDown).Offset(17, 0).Value = Format(symSixty, "Currency")
    Range("AA1").End(xlDown).Offset(17, 0).Value = Format(symNinety, "Currency")
    Range("AB1").End(xlDown).Offset(17, 0).Value = Format(symOneTwenty, "Currency")
    Range("AC1").End(xlDown).Offset(17, 0).Value = Format(symOneEighty, "Currency")
    
    'display values for NuCare
    Range("X1").End(xlDown).Offset(18, 0).Value = "NuCare"
    Range("Y1").End(xlDown).Offset(18, 0).Value = Format(nuThirty, "Currency")
    Range("Z1").End(xlDown).Offset(18, 0).Value = Format(nuSixty, "Currency")
    Range("AA1").End(xlDown).Offset(18, 0).Value = Format(nuNinety, "Currency")
    Range("AB1").End(xlDown).Offset(18, 0).Value = Format(nuOneTwenty, "Currency")
    Range("AC1").End(xlDown).Offset(18, 0).Value = Format(nuOneEighty, "Currency")
    
    'display sum of Nucare and Symphony below NuCare Aging
    Range("Y1").End(xlDown).Offset(19, 0).Value = Format((nuThirty + symThirty), "Currency")
    Range("Z1").End(xlDown).Offset(19, 0).Value = Format((nuSixty + symSixty), "Currency")
    Range("AA1").End(xlDown).Offset(19, 0).Value = Format((nuNinety + symNinety), "Currency")
    Range("AB1").End(xlDown).Offset(19, 0).Value = Format((nuOneTwenty + symOneTwenty), "Currency")
    Range("AC1").End(xlDown).Offset(19, 0).Value = Format((nuOneEighty + symOneEighty), "Currency")
    
    'display percentage columns
    Range("Z1").End(xlDown).Offset(20, 0).Value = 0.01
    Range("AA1").End(xlDown).Offset(20, 0).Value = 0.1
    Range("AB1").End(xlDown).Offset(20, 0).Value = 0.25
    Range("AC1").End(xlDown).Offset(20, 0).Value = 1
    
    'display adjusted totals
    Range("X1").End(xlDown).Offset(21, 0).Value = "Adjusted Totals"
    Range("Z1").End(xlDown).Offset(21, 0).Value = (nuSixty + symSixty) * 0.01
    Range("AA1").End(xlDown).Offset(21, 0).Value = (nuNinety + symNinety) * 0.1
    Range("AB1").End(xlDown).Offset(21, 0).Value = (nuOneTwenty + symOneTwenty) * 0.25
    Range("AC1").End(xlDown).Offset(21, 0).Value = (nuOneEighty + symOneEighty) * 1
    Range("AD1").End(xlDown).Offset(21, 0).Value = Format(Range("Z1").End(xlDown).Offset(21, 0).Value + Range("AA1").End(xlDown).Offset(21, 0).Value + Range("AB1").End(xlDown).Offset(21, 0).Value + Range("AC1").End(xlDown).Offset(21, 0).Value, "Currency")
    
    'popluate summary totals at the bottom
    Dim fromAbove As Double
    Dim exempt As Double
    Dim corrRes As Double
    Dim oldCreds As Double
    
    fromAbove = Range("AD1").End(xlDown).Offset(6, 0).Value
    exempt = Range("AD1").End(xlDown).Offset(15, 0).Value
    corrRes = Range("AD1").End(xlDown).Offset(21, 0).Value
    oldCreds = Range("AD1").End(xlDown).Offset(8, 0).Value
    
    Range("AC1").End(xlDown).Offset(23, 0).Value = "Form Above"
    Range("AC1").End(xlDown).Offset(24, 0).Value = "Exempt"
    Range("AC1").End(xlDown).Offset(25, 0).Value = "Corr Res"
    Range("AC1").End(xlDown).Offset(26, 0).Value = "Old Credits"
    Range("AC1").End(xlDown).Offset(27, 0).Value = "Reserve"
    Range("AC1").End(xlDown).Offset(28, 0).Value = "BDWO/net"
    Range("AC1").End(xlDown).Offset(29, 0).Value = Range("AE1").End(xlDown).Offset(7, 0).Value
    Range("AC1").End(xlDown).Offset(30, 0).Value = "Change"
    
    Range("AD1").End(xlDown).Offset(23, 0).Value = Range("AD1").End(xlDown).Offset(6, 0).Value
    Range("AD1").End(xlDown).Offset(24, 0).Value = Range("AD1").End(xlDown).Offset(15, 0).Value
    Range("AD1").End(xlDown).Offset(25, 0).Value = Range("AD1").End(xlDown).Offset(21, 0).Value
    Range("AD1").End(xlDown).Offset(26, 0).Value = Range("AD1").End(xlDown).Offset(8, 0).Value
    Range("AD1").End(xlDown).Offset(27, 0).Value = Format(Round(fromAbove - exempt + corrRes - oldCreds, 0), "Currency")
    Range("AD1").End(xlDown).Offset(29, 0).Value = Range("AD1").End(xlDown).Offset(7, 0).Value
    Range("AD1").End(xlDown).Offset(30, 0).Value = Format(Round((fromAbove - exempt + corrRes - oldCreds) - Range("AD1").End(xlDown).Offset(29, 0).Value, 0), "Currency")
    
    'complete the daily sales and A/R portion
    Dim AR As Double
    Dim percentage As Double
    
    Range("K1").End(xlDown).Offset(3, 0).Value = "Daily Sales (SL, 01, 03)"
    Range("L1").End(xlDown).Offset(2, 0).Value = InputBox("Please enter the daily sales (Do not enter commas or dollar signes)")
    Range("L1").End(xlDown).Offset(4, 0).Value = "AR"
    Range("M1").End(xlDown).Offset(4, 0).Value = "%Current"
    'calculate AR
    AR = Round((totalAR - Range("L1").End(xlDown).Offset(2, 0).Value - Range("AD1").End(xlDown).Offset(6, 0).Value), 0)
    Range("L1").End(xlDown).Offset(5, 0).Value = Format(AR, "Currency") 'display AR
    'calulate percentage
    percentage = (current - Range("L1").End(xlDown).Offset(2, 0).Value) / Range("L1").End(xlDown).Offset(5, 0).Value
    Range("M1").End(xlDown).Offset(5, 0).Value = Format(Round(percentage, 3), "Percent")
    
    Cells.EntireColumn.AutoFit
    
    
    
End Sub

'the getTotals takes a string for a selected cell argument and an interger argument
'that will indicate how many cells should be looped through. The value of each cell
'will be accumulated, which will return the sum

Function getTotals(ByVal ref As String, ByVal count As Integer)
    Dim i As Integer
    Dim amount As Double
        
    For i = 2 To count
        amount = amount + Range(ref & i).Value
    Next i
    
    getTotals = amount
End Function


Function fillBoxes(ByVal ref As String, ByVal count As Integer)
    Dim i As Integer
        
    For i = 2 To count
        If IsEmpty(Range(ref & i)) Then
            Range(ref & i).Value = 0#
        ElseIf Range(ref & i).Value < 0 Then
            Range(ref & i).Interior.ColorIndex = 34
        ElseIf Range(ref & i) > 0 Then
            Range(ref & i).Interior.ColorIndex = 44
        End If
        
    Next i
    
End Function
----------------------------------------------------------------------------------------------------------------------------
Option Explicit

Sub deleteAll()
    
    'delete everything
    Cells.Clear
    
End Sub




